#!/usr/bin/env bash

# While these logging/output functions seem unused, they are used by downstream buildpacks that source this file.
# Do not delete them before making sure that all known downstream buildpacks do not use these anymore.

error() {
	echo
	echo " !     ERROR: $*" | indent no_first_line_indent
	echo
	exit 1
}

error_return() {
	echo
	echo " !     ERROR: $*" | indent no_first_line_indent
	echo
	return 1
}

warning() {
	echo
	echo " !     WARNING: $*" | indent no_first_line_indent
	echo
}

warning_inline() {
	echo " !     WARNING: $*" | indent no_first_line_indent
}

status() {
	echo "-----> $*"
}

status_pending() {
	echo -n "-----> $*..."
}

status_done() {
	echo " done"
}

notice() {
	echo
	echo "NOTICE: $*" | indent
	echo
}

notice_inline() {
	echo "NOTICE: $*" | indent
}

# sed -l basically makes sed replace and buffer through stdin to stdout
# so you get updates while the command runs and dont wait for the end
# e.g. npm install | indent
indent() {
	# if an arg is given it's a flag indicating we shouldn't indent the first line, so use :+ to tell SED accordingly if that parameter is set, otherwise null string for no range selector prefix (it selects from line 2 onwards and then every 1st line, meaning all lines)
	c="${1:+"2,999"} s/^/       /"
	case $(uname) in
	Darwin) sed -l "$c" ;; # mac/bsd sed: -l buffers on line boundaries
	*) sed -u "$c" ;;      # unix/gnu sed: -u unbuffered (arbitrary) chunks of data
	esac
}
