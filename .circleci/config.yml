version: 2.1
parameters:
  enable-hatchet-with-staging-bucket:
    type: boolean
    default: false

orbs:
  heroku: circleci/heroku@1.1.1

executors:
  heroku-18:
    docker:
      - image: heroku/heroku:18
  heroku-20:
    docker:
      - image: heroku/heroku:20
  heroku-22:
    docker:
      - image: heroku/heroku:22

jobs:
  hatchet:
    parameters:
      heroku-stack:
        type: enum
        enum: ["heroku-18", "heroku-20", "heroku-22"]
      use-staging-bucket:
        type: boolean
        default: false
    docker:
      - image: circleci/ruby:2.7
    environment:
      HATCHET_APP_LIMIT: 100
      PARALLEL_SPLIT_TEST_PROCESSES: 8
      # We use the Java buildpack for all Hatchet tests and instruct it to use the code of the current branch as the
      # source for the JVM common buildpack with the 'DEFAULT_APP_CONFIG_JVM_COMMON_BUILDPACK' environment
      # variable.
      HATCHET_BUILDPACK_BASE: https://github.com/heroku/heroku-buildpack-java
      HATCHET_BUILDPACK_BRANCH: main
      # Default stack for all Heroku apps created by Hatchet
      DEFAULT_APP_STACK: << parameters.heroku-stack >>
      # Default config variables for all Heroku apps created by Hatchet, prefixed with 'DEFAULT_APP_CONFIG_'
      DEFAULT_APP_CONFIG_JVM_COMMON_BUILDPACK: "https://api.github.com/repos/heroku/heroku-buildpack-jvm-common/tarball/<< pipeline.git.branch >>"
      DEFAULT_APP_CONFIG_JVM_BUILDPACK_ASSETS_BASE_URL: <<# parameters.use-staging-bucket >>https://lang-jvm-staging2.s3.us-east-1.amazonaws.com/<</ parameters.use-staging-bucket >>
    steps:
      - checkout
      - heroku/install
      - run:
          name: Install Ruby dependencies
          command: |
            gem install bundler
            bundle install
      - run:
          name: Hatchet CI setup
          command: bundle exec hatchet ci:setup
      - run:
          name: Execute rspec w/ parallel_split_test
          command: bundle exec parallel_split_test test/spec/

  buildpack-testrunner:
    docker:
      - image: cimg/openjdk:8.0
    environment:
      SHUNIT_HOME: /tmp/shunit2-2.1.6
      # Note the missing STACK environment variable here. This works since there is a default value in the buildpack
      # source. I ported this as-is from the Travis config. Given we're trying to get rid of testrunner entirely,
      # it will stay like this. If we, for some reason, decide to keep testrunner, we should look into a fixed STACK env var.
    steps:
      - checkout
      - run:
          name: Install required apt packages
          command: |
            sudo apt-get update
            sudo apt-get install file
      - run:
          name: Download and unpack shunit 2.1.6
          command: curl -sSf --retry 3 --retry-connrefused --connect-timeout 5 https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/shunit2/shunit2-2.1.6.tgz | tar xz -C /tmp/
      - run:
          name: Clone heroku-buildpack-testrunner
          command: git clone https://github.com/heroku/heroku-buildpack-testrunner.git /tmp/testrunner
      - run:
          name: Apply heroku-buildpack-testrunner patches to enforce bash shell
          command: |
            cd /tmp/testrunner
            git apply \<<'EOF'
            diff --git a/bin/run b/bin/run
            index 0d5b790..a0ff25c 100755
            --- a/bin/run
            +++ b/bin/run
            @@ -101,7 +101,7 @@ for bp in ${@}; do
                 suite_start_time="$(date +%s)"
             
                 echo "  TEST SUITE: $(basename ${f})"
            -    ${SHUNIT_HOME?"'SHUNIT_HOME' environment variable must be set"}/src/shunit2 ${f} | indent
            +    /bin/bash ${SHUNIT_HOME?"'SHUNIT_HOME' environment variable must be set"}/src/shunit2 ${f} | indent
                 exit_code=$(max ${exit_code} ${PIPESTATUS[0]})
             
                 suite_end_time="$(date +%s)"

            EOF
      - run:
          name: Execute buildpack-testrunner
          command: /tmp/testrunner/bin/run .

  unit-tests-heroku-buildpack:
    parameters:
      heroku-stack:
        type: enum
        enum: ["heroku-18", "heroku-20", "heroku-22"]
    environment:
      STACK: << parameters.heroku-stack >>
    executor:
      name: << parameters.heroku-stack >>
    steps:
      - checkout
      - run: test/v2
      - run: test/jdbc.sh

  # There is an official circle ci orb for shellcheck. However, in its current version, it is really made to just check
  # files that follow a certain pattern. For this buildpack, we have multiple patterns we need to check so we're
  # implementing the bare-minimum for shellcheck here. This should be replaced with an orb as soon one is available.
  shellcheck:
    docker:
      - image: koalaman/shellcheck-alpine:v0.7.1
    steps:
      - run:
          name: "Install git"
          command: "apk add git"
      - checkout
      - run:
          name: "Run shellcheck with fixed set of directories"
          command: shellcheck bin/* lib/jvm.sh etc/* opt/* test/*.sh

  # At the time of writing, there was no orb for shfmt. This should be replaced with an orb when it becomes available.
  shfmt:
    docker:
      - image: mvdan/shfmt:v3.1.2-alpine
    steps:
      - run:
          name: "Install git"
          command: "apk add git"
      - checkout
      - run:
          name: "Run shfmt (excluding vendor directory)"
          command: shfmt -f . | grep -v "/vendor/" | xargs shfmt -i 2 -d

workflows:
  default-ci-workflow:
    jobs:
      - shfmt
      - shellcheck

      - unit-tests-heroku-buildpack:
          requires:
            - shfmt
            - shellcheck
          matrix:
            parameters:
              heroku-stack: ["heroku-18", "heroku-20", "heroku-22"]

      - buildpack-testrunner:
          requires:
            - shfmt
            - shellcheck

      - hatchet:
          requires:
            - shfmt
            - shellcheck
          matrix:
            parameters:
              heroku-stack: ["heroku-18", "heroku-20", "heroku-22"]
  hatchet-with-staging-bucket:
    when: << pipeline.parameters.enable-hatchet-with-staging-bucket >>
    jobs:
      - hatchet:
          matrix:
            parameters:
              use-staging-bucket: [true]
              heroku-stack: ["heroku-18", "heroku-20", "heroku-22"]
